# golangci-lint 配置文件
# 更多配置选项请参考: https://golangci-lint.run/usage/configuration/

run:
  # 超时时间
  timeout: 5m
  # 要检查的目录
  modules-download-mode: readonly
  # 跳过自动生成的文件
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"

# 输出配置
output:
  # 输出格式: colored-line-number|line-number|json|tab|checkstyle|code-climate
  format: colored-line-number
  # 打印检查的文件名
  print-issued-lines: true
  # 打印检查器名称
  print-linter-name: true
  # 使检查结果可重现
  sort-results: true

# 启用的检查器
linters:
  enable:
    # 默认启用的检查器
    - errcheck      # 检查未处理的错误
    - gosimple      # 简化代码建议
    - govet         # go vet 检查
    - ineffassign   # 检查无效赋值
    - staticcheck   # 静态分析检查
    - typecheck     # 类型检查
    - unused        # 检查未使用的常量、变量、函数和类型
    
    # 额外启用的检查器
    - gofmt         # 检查代码格式
    - goimports     # 检查导入格式
    - misspell      # 检查拼写错误
    - unconvert     # 检查不必要的类型转换
    - unparam       # 检查未使用的函数参数
    - gocritic      # Go 代码审查工具
    - gocyclo       # 检查循环复杂度
    - dupl          # 检查重复代码
    - goconst       # 检查可以用常量替换的字符串
    - godot         # 检查注释是否以句号结尾
    - gosec         # 安全检查
    - prealloc      # 检查可以预分配的切片
    - revive        # 快速、可配置、可扩展、灵活的 Go 代码检查器
    
  # 不再需要显式禁用已弃用的linter，golangci-lint会自动处理

# 检查器特定设置
linters-settings:
  # errcheck 设置
  errcheck:
    # 检查类型断言
    check-type-assertions: true
    # 检查空白赋值
    check-blank: true
    # 忽略的函数调用
    ignore: fmt:.*,io/ioutil:^Read.*

  # gocyclo 设置
  gocyclo:
    # 最小复杂度阈值
    min-complexity: 15

  # dupl 设置
  dupl:
    # 重复代码的最小行数
    threshold: 100

  # goconst 设置
  goconst:
    # 最小字符串长度
    min-len: 3
    # 最小出现次数
    min-occurrences: 3

  # misspell 设置
  misspell:
    # 语言设置
    locale: US

  # unused 设置
  unused:
    # 检查导出的函数和变量
    check-exported: false

  # gosec 设置
  gosec:
    # 要包含的规则
    includes:
      - G401
      - G501
      - G502
    # 要排除的规则
    excludes:
      - G104

  # revive 设置
  revive:
    # 最小置信度
    min-confidence: 0
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

# 问题设置
issues:
  # 排除使用默认排除规则
  exclude-use-default: false
  
  # 要排除的规则
  exclude-rules:
    # 排除测试文件的某些检查
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
    
    # 排除生成的文件
    - path: \.pb\.go
      linters:
        - gofmt
        - goimports
        - gocritic
    
    # 排除 main 函数的某些检查
    - path: cmd/
      text: "main function"
      linters:
        - revive

  # 最大问题数量，0 表示无限制
  max-issues-per-linter: 0
  max-same-issues: 0

  # 新代码检查设置
  new: false
  new-from-rev: ""
  new-from-patch: ""

# 严重性设置
severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - gocritic
      severity: warning